name: 'Setup Environment'
description: 'Determine the environment and deployment settings based on the branch name'
author: 'Eaton'

inputs:
  branch_name:
    description: 'The name of the branch to determine environment from'
    required: true
    default: ${{ github.ref_name }}

  deploy_on_main:
    description: 'Whether to deploy when on main/master branch'
    required: false
    default: 'true'

  deploy_on_develop:
    description: 'Whether to deploy when on develop branch'
    required: false
    default: 'true'

  deploy_on_staging:
    description: 'Whether to deploy when on staging branch'
    required: false
    default: 'true'

outputs:
  environment:
    description: 'The determined environment name'
    value: ${{ steps.set-env.outputs.environment }}

  is_production:
    description: 'Boolean indicating if this is production environment'
    value: ${{ steps.set-env.outputs.is_production }}

  is_staging:
    description: 'Boolean indicating if this is staging environment'
    value: ${{ steps.set-env.outputs.is_staging }}

  is_uat:
    description: 'Boolean indicating if this is UAT environment'
    value: ${{ steps.set-env.outputs.is_uat }}

  is_development:
    description: 'Boolean indicating if this is development environment'
    value: ${{ steps.set-env.outputs.is_development }}

  is_testing:
    description: 'Boolean indicating if this is testing environment'
    value: ${{ steps.set-env.outputs.is_testing }}

  deploy:
    description: 'Boolean indicating if deployment should occur'
    value: ${{ steps.set-env.outputs.deploy }}

  branch_name:
    description: 'The normalized branch name used for calculations'
    value: ${{ steps.set-env.outputs.branch_name }}

runs:
  using: 'composite'
  steps:
    - name: Set environment based on branch
      id: set-env
      shell: bash
      run: |
        BRANCH="${{ inputs.branch_name }}"
        DEPLOY_ON_MAIN="${{ inputs.deploy_on_main }}"
        DEPLOY_ON_DEVELOP="${{ inputs.deploy_on_develop }}"
        DEPLOY_ON_STAGING="${{ inputs.deploy_on_staging }}"
        
        echo "Processing branch: $BRANCH"
        
        # Normalize branch name (remove refs/heads/ prefix if present)
        BRANCH=$(echo "$BRANCH" | sed 's|refs/heads/||')
        
        # Default values
        ENVIRONMENT="unknown"
        IS_PRODUCTION="false"
        IS_STAGING="false"
        IS_DEVELOPMENT="false"
        IS_TESTING="false"
        IS_UAT="false"
        DEPLOY="false"
        
        # Determine environment based on branch patterns
        case "$BRANCH" in
          main|master)
            ENVIRONMENT="production"
            IS_PRODUCTION="true"
            if [[ "$DEPLOY_ON_MAIN" == "true" ]]; then
              DEPLOY="true"
            fi
            ;;
          staging)
            ENVIRONMENT="staging"
            IS_STAGING="true"
            if [[ "$DEPLOY_ON_STAGING" == "true" ]]; then
              DEPLOY="true"
            fi
            ;;
          develop|development)
            ENVIRONMENT="development"
            IS_DEVELOPMENT="true"
            if [[ "$DEPLOY_ON_DEVELOP" == "true" ]]; then
              DEPLOY="true"
            fi
            ;;
          uat|user-acceptance-testing)
            ENVIRONMENT="uat"
            IS_UAT="true"
            DEPLOY="true"
            ;;
          test|testing)
            ENVIRONMENT="testing"
            IS_TESTING="true"
            DEPLOY="true"
            ;;
          release/*)
            ENVIRONMENT="staging"
            IS_STAGING="true"
            DEPLOY="true"
            ;;
          hotfix/*)
            ENVIRONMENT="staging"
            IS_STAGING="true"
            DEPLOY="true"
            ;;
          feature/*|bugfix/*|chore/*)
            ENVIRONMENT="development"
            IS_DEVELOPMENT="true"
            DEPLOY="false"
            ;;
          *)
            ENVIRONMENT="development"
            IS_DEVELOPMENT="true"
            DEPLOY="false"
            ;;
        esac
        
        # Output results
        echo "Environment determined: $ENVIRONMENT"
        echo "Deploy: $DEPLOY"
        
        # Set outputs
        echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT
        echo "is_production=$IS_PRODUCTION" >> $GITHUB_OUTPUT
        echo "is_staging=$IS_STAGING" >> $GITHUB_OUTPUT
        echo "is_uat=$IS_UAT" >> $GITHUB_OUTPUT
        echo "is_development=$IS_DEVELOPMENT" >> $GITHUB_OUTPUT
        echo "is_testing=$IS_TESTING" >> $GITHUB_OUTPUT
        echo "deploy=$DEPLOY" >> $GITHUB_OUTPUT
        echo "branch_name=$BRANCH" >> $GITHUB_OUTPUT
        
        # Set environment variables for subsequent steps
        echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_ENV
        echo "DEPLOY=$DEPLOY" >> $GITHUB_ENV
        echo "BRANCH_NAME=$BRANCH" >> $GITHUB_ENV

branding:
  icon: 'settings'
  color: 'blue'
