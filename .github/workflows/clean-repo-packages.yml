name: List and Cleanup GHCR Docker Images

on:
  workflow_call:
    inputs:
      package-name:
        description: 'Docker image name to clean up'
        type: string
        required: false
        default: ''
      keep-versions:
        description: 'Number of latest versions to keep for each package'
        type: number
        required: false
        default: 2

jobs:
  list-and-cleanup:
    name: List and Cleanup Docker Images in GHCR
    runs-on: ubuntu-latest
    steps:
      - name: Get repository name
        id: repo-name
        run: |
          REPO_NAME=$(echo ${{ github.repository }} | cut -d '/' -f 2)
          echo "name=$REPO_NAME" >> $GITHUB_OUTPUT

      - name: List all packages in repository
        id: list-packages
        run: |
          echo "Listing all packages in ${{ github.repository }}"
          PACKAGES=$(gh api -H "Accept: application/vnd.github+json" /orgs/${{ github.repository_owner }}/packages?package_type=container | jq -r '.[] | select(.repository.name == "${{ steps.repo-name.outputs.name }}") | .name')
          echo "Found packages:"
          echo "$PACKAGES"
          echo "Found Token: $GH_TOKEN"
          echo "packages=$(echo $PACKAGES | tr '\n' ' ')" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.PACKAGE_TOKEN }}

      - name: Get package name
        id: package-name
        run: |
          PACKAGE_NAME=${{ inputs.package-name }}
          if [ -z "$PACKAGE_NAME" ]; then
            # Default to repository name if not specified
            PACKAGE_NAME=$(echo ${{ github.repository }} | cut -d '/' -f 2)
          fi
          echo "name=$PACKAGE_NAME" >> $GITHUB_OUTPUT

      - name: Delete old container images
        uses: actions/delete-package-versions@v4
        with:
          package-name: ${{ steps.package-name.outputs.name }}
          package-type: 'container'
          min-versions-to-keep: ${{ inputs.keep-versions || 2 }}
          token: ${{ secrets.GITHUB_TOKEN }}
          delete-only-untagged-versions: false

      - name: Log cleanup results
        run: |
          echo "Cleanup completed at $(date)"
          echo "Package: ${{ steps.package-name.outputs.name }}"
          echo "Kept latest ${{ inputs.keep-versions || 2 }} versions"
